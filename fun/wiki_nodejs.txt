Node.js
From Wikipedia, the free encyclopedia
Node.js
Node.js logo
Original author(s)	Ryan Lienhart Dahl
Developer(s)	
Node.js Developers, Joyent
StrongLoop
Initial release	May 27, 2009[1]
Stable release	0.10.26 / February 18, 2014[2]
Preview release	0.11.11 / January 29, 2014[3]
Development status	Active
Written in	C, C++, JavaScript
Operating system	Mac OS X, Linux, Solaris, FreeBSD, OpenBSD, Windows (older versions require Cygwin), webOS
Type	Event-driven networking
License	MIT
Website	nodejs.org
Node.js is a software platform for scalable server-side and networking applications. Node.js applications are written in JavaScript, and can be run within the Node.js runtime on Windows, Mac OS X and Linux with no changes.
Node.js applications are designed to maximize throughput and efficiency, using non-blocking I/O and asynchronous events. Node.js applications run single-threaded, although Node uses multiple threads for file and network events.
Node.js internally uses the Google V8 JavaScript engine to execute code, and a large percentage of the basic modules are written in JavaScript. Node.js contains a built-in HTTP server library, making it possible to run a web server without Apache or Lighttpd.
Contents  [hide] 
1 Overview
2 Architecture
3 Community
4 History
4.1 Inspiration
4.2 Versions
4.3 Recent events
5 Tools and IDEs
6 Examples
7 See also
8 References
9 Further reading
10 External links
Overview[edit]

Ryan Dahl, the creator of Node.js, originally had the goal in mind of creating web sites with push capabilities as seen in web applications like Gmail. After trying solutions in several other programming languages he chose JavaScript because of the lack of an existing I/O API. This allowed him to define a convention of non-blocking, event-driven I/O.[4]
Similar environments written in other programming languages include Tornado and Twisted for Python; Perl Object Environment for Perl; libevent for C; Vert.x for Java, JavaScript, Groovy, Python and Ruby; Akka for Java and Scala; EventMachine for Ruby and vibe.d for D. Unlike most JavaScript programs, Node.js is not executed in a web browser, but instead as a server-side JavaScript application. Node.js implements some CommonJS specifications.[5] It also provides a REPL environment for interactive testing.
Architecture[edit]

There are four building blocks that constitute Node. First, Node encapsulates libuv to handle asynchronous events and Google’s V8 to provide a run-time for JavaScript. Libuv is what abstracts away all of the underlying network and file system functionality on both Windows and POSIX-based systems like Linux, Mac OS X and Unix. The core functionality of Node, modules like Assert, HTTP, Crypto etc, reside in a core library written in JavaScript. The Node bindings, written in C++, provide the glue connecting these technologies to each other and to the operating system.
Community[edit]

Node.js has a developer community primarily centered on two mailing lists, nodejs,[6] nodejs-dev,[7] and the IRC channel #node.js on freenode. The community gathers at NodeConf,[8] an annual developer conference focused on Node.js.[9]
Node.js is currently used by a number of large companies including SAP[10],LinkedIn,[11][12] Microsoft,[13][14] Yahoo!,[15] Walmart[16] and PayPal.[17]
History[edit]

Inspiration[edit]


Ryan Dahl, creator of Node.js
Node.js was created by Ryan Dahl starting in 2009. Its development and maintenance is sponsored by Joyent.[18] Dahl was inspired to create Node.js after seeing a file upload progress bar on Flickr. The browser did not know how much of the file had been uploaded and had to query the web server. Dahl wanted an easier way.[19] Ruby's Mongrel web server was another source of inspiration for Dahl.[20]
Originally Dahl had several failed projects in C, Lua, and Haskell, but when Google's V8 engine was released, Dahl began to examine JavaScript.[21]
Even though his original idea was non-blocking he "backed out of that (a bit) in the module system and a few other areas" as it made loading external libraries troublesome.[22]
Versions[edit]
Node.js was first published by Dahl in 2011 and could only run on Linux. NPM, a package manager for Node.js libraries, was introduced the same year.
In June 2011, Microsoft partnered with Joyent to help create a native Windows version of Node.js.[23] The first Node.js build to support Windows was released in July.
Recent events[edit]
On January 30, 2012 Dahl stepped aside, promoting coworker and NPM creator Isaac Schlueter to the gatekeeper position. Dahl wrote on Google groups,
Now that the rewrite on top of libuv is largely complete, I am ceding my position as gatekeeper to Isaac Schlueter. Our energy will now be largely focused over the next few months on improving the third party module system experience including a website for browsing modules, a new addon build system, and binary installations from npm. Isaac is in the unique position to bridge the gap between core and external modules to ensure a pleasant experience. After three years of working on Node, this frees me up to work on research projects. I am still an employee at Joyent and will advise from the sidelines but I won't be involved in the day-to-day bug fixes. Isaac has final say over what makes it into the releases. Appeals for new features, changes, and bug fixes should now be directed at him.[24]
Dahl continues to work for Joyent and as an advisor for node.[25]
On January 15, 2014 Schlueter announced he was making NPM his main focus and Timothy J Fontaine would be Node.js new project lead. Isaac wrote on the Node.js blog,
Over the last year, TJ Fontaine has become absolutely essential to the Node.js project. He's been building releases, managing the test bots, fixing nasty bugs and making decisions for the project with constant focus on the needs of our users. ... Anyone who's been close to the core project knows that he's been effectively leading the project for a while now, so we're making it official. Effective immediately, TJ Fontaine is the Node.js project lead. I will remain a Node core committer, and expect to continue to contribute to the project in that role. My primary focus, however, will be npm.[26]
The next day, January 16, 2014, Timothy J Fontaine made a followup post outlining the road ahead where he, among other things, mention bug fixing, performance tuning, staying up to date with V8 engine and tooling.[27]
Tools and IDEs[edit]

IDEs (editor, debugger, linter)
JetBrains WebStorm (commercial)
JetBrains IntelliJ IDEA (commercial)
Nodeclipse Enide Studio (free open-source, Eclipse-based)
Microsoft Visual Studio with TypeScript
Online code editors
Codenvy IDE (cloud service)
Cloud9 IDE (cloud service)
Runtimes and debuggers
Microsoft WebMatrix (free) or Visual Studio (commercial product) with Node.js Tools for Visual Studio (free)
Node Inspector debugger (Debugger Interface using Google's Blink Developer Tools)
Examples[edit]

This is an implementation of a "hello world" HTTP server in Node.js:
var http = require('http');
 
http.createServer(
  function (request, response) {
    response.writeHead(200, {'Content-Type': 'text/plain'});
    response.end('Hello World\n');
  }
).listen(8000);
 
console.log('Server running at http://localhost:8000/');
The following code is a simple TCP server which listens on port 8000 and echoes 'hello' upon connection:
var net = require('net');
 
net.createServer(
  function (stream) {
    stream.write('hello\r\n');
 
    stream.on('end',
      function () {
        stream.end('goodbye\r\n');
      }
    );
 
    stream.pipe(stream);
  }
).listen(8000);
See also[edit]

MEAN
References[edit]

Jump up ^ https://github.com/joyent/node/tags?after=v0.0.4
Jump up ^ Node v0.10.26 (Stable)
Jump up ^ Node v0.11.11 (Unstable)
Jump up ^ Hughes-Croucher, Tom; Wilson, Mike (2012). Up and Running with Node.js. Up and Running (1st ed.). Sebastopol: O'Reilly. p. vii. ISBN 978-1-4493-9858-3. "I was concerned about the ability to program advanced push features into the website like I had seen in Gmail"
See the book's Foreword at OReilly.com
Jump up ^ Implementations/node.js - CommonJS Spec Wiki
Jump up ^ http://groups.google.com/group/nodejs
Jump up ^ http://groups.google.com/group/nodejs-dev nodejs-dev
Jump up ^ http://www.nodeconf.com/
Jump up ^ NodeConf Schedule Announced, By Klint Finley, April 7, 2011, ReadWriteHack
Jump up ^ "SAP AppBuilder". SAP. March 10, 2014. Retrieved March 10, 2014.
Jump up ^ "You’ll never believe how LinkedIn built its new iPad app". VentureBeat. May 2, 2012. Retrieved May 10, 2012.
Jump up ^ [1], LinkedIn's developer blog discusses their Node.js stack optimizations
Jump up ^ "Here's why you should be happy that Microsoft is embracing Node.js". The Guardian. November 9, 2011. Retrieved May 10, 2012.
Jump up ^ [2], WebMatrix - Front End Web Developers take note (ASP.NET, PHP, node.js and more)
Jump up ^ [3], Yahoo! Developer Network announces Cocktails project using Node.js
Jump up ^ "Why Walmart is using Node.js". VentureBeat. January 24, 2012. Retrieved May 10, 2012.
Jump up ^ "Clash of the Titans: Releasing the Kraken, NodeJS @paypal". fluentconf.com. May 28, 2013. Retrieved September 11, 2013.
Jump up ^ Alex Handy (2011-06-24). "Node.js pushes JavaScript to the server-side". SDTimes. Retrieved 2011-09-04.
Jump up ^ Harris, Amber (April 1, 2012). "The Birth of Node: Where Did it Come From? Creator Ryan Dahl Shares the History". Devops Angle. Retrieved 26 October 2013.
Jump up ^ Synodinos, Dio (December 13, 2010). "Deep inside Node.js with Ryan Dahl". InfoQ. Retrieved 26 October 2013.
Jump up ^ McCarthy, Kevin (January 31, 2011). "Node.js Interview: 4 Questions with Creator Ryan Dahl". Streetwise Media. Retrieved 26 October 2013.
Jump up ^ Podsechin, Oleg (August 10, 2010). "Ryan Dahl Interview: Part 1". DailyJS. Retrieved 26 October 2013.
Jump up ^ [Porting Node to Windows http://blog.nodejs.org/2011/06/23/porting-node-to-windows-with-microsoft%25e2%2580%2599s-help/], Node.js Blog
Jump up ^ Dahl, Ryan. "New gatekeeper". Retrieved 26 October 2013.
Jump up ^ Finley, Klint (January 30, 2012). "Node.js Creator Ryan Dahl Cedes Role as Gatekeeper to NPM Creator Isaac Schlueter". Silicon Angle. Retrieved 26 October 2013.
Jump up ^ Schlueter, Isaac (January 15, 2014). "The Next Phase of Node.js". Retrieved 21 January 2014.
Jump up ^ Fontaine, Timothy (January 16, 2014). "Node.js and the Road Ahead". Retrieved 21 January 2014.
Further reading[edit]

Hughes-Croucher, Tom; Wilson, Mike (April 2012), Up and Running with Node.js (First ed.), O'Reilly Media, p. 204, ISBN 978-1-4493-9858-3
Ornbo, George (September 2012), Sams Teach Yourself Node.js in 24 Hours (First ed.), SAMS Publishing, p. 440, ISBN 978-0-672-33595-2
Teixeira, Pedro (October 2012), Professional Node.js (First ed.), John Wiley & Sons, p. 408, ISBN 978-1-1182-2754-1
Randal L. Schwartz and Aaron Newcomb (9 January 2013). "Episode 237: Node.js". http://twit.tv/show/floss-weekly (Podcast). TWiT.tv. Event occurs at 1:08:13. Retrieved 9 January 2013.
Ribeiro Pereira, Caio (July 2013), Aplicações web real-time com Node.js (First ed.), Casa do Código, p. 143, ISBN 978-85-66250-14-5
External links[edit]

Portal icon	Free software portal
Official website
npm - the official package manager for Node.js
nodejs modules
Node.js Tools for Visual Studio
JXcore - Multi-threaded fork on Node.js
[hide] v t e
JavaScript
Code analysis	
JSHint JSLint
Compilers	
CoffeeScript Google Closure Compiler Google Web Toolkit Morfik
Concepts	
Ajax Client-side JavaScript library Dynamic HTML JavaScript syntax Unobtrusive JavaScript
Debuggers	
Firebug Opera Dragonfly Microsoft Script Editor Microsoft Script Debugger Microsoft Visual Studio Microsoft Visual Web Developer Express Venkman Web Inspector
Doc generators	
JSDoc
Editors	
Comparison of JavaScript-based source code editors Online Javascript IDE
Engines	
Comparison of layout engines List of ECMAScript engines List of JavaScript engines
Frameworks	
Comparison of JavaScript frameworks List of JavaScript libraries
Related languages	
ActionScript asm.js CoffeeScript ECMAScript JavaScript OSA JScript VBScript Dart TypeScript
Related technologies	
Cascading Style Sheets Document Object Model HTML JSON
Resources	
npm NuGet
Server-side	
Active Server Pages CommonJS JSGI Node.js Wakanda
Unit testing	
QUnit Jasmine JSUnit List of JavaScript unit testing frameworks
People	
Douglas Crockford Brendan Eich John Resig
Categories: JavaScript librariesFree software programmed in JavaScriptFree software programmed in C++Joyent
